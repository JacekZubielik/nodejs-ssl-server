name: Release

on:
  push:
    tags:
      - v[0-9]+.*
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  linter:
    name: Linter
    runs-on: [ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20.12
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install

      - name: Run linter
        uses: github/super-linter@v6
        env:
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_JAVASCRIPT_ES: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build
    needs: [ linter ]
    runs-on: [ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20.12
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci

      - name: Compile
        run: |
          npm run clean && \
          npm run dist

      - name: Create artifact
        uses: actions/upload-artifact@v4
        with:
          name: "app-${{ github.sha }}"
          path: |
            dist/*.js

  release:
    name: Release
    needs: [ build ]
    runs-on: [ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: taiki-e/create-gh-release-action@v1.8.2
        with:
          changelog: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          title: $version
          branch: main
          allow-missing-changelog: true

  image:
    needs: [ release ]

    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            gorabbit/nodejs-ssl-server
            ghcr.io/jacekzubielik/nodejs-ssl-server
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha

      - name: Login to DockerHub
        # if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}